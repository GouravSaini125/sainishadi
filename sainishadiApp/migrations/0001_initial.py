# Generated by Django 2.2.1 on 2019-08-23 18:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('father_name', models.CharField(blank=True, default='', max_length=50)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], default='', max_length=6)),
                ('status', models.CharField(blank=True, choices=[('Unmarried', 'Unmarried'), ('Divorced', 'Divorced')], default='', max_length=10)),
                ('mobile', models.CharField(blank=True, default='', max_length=15)),
                ('address', models.TextField(blank=True, default='')),
                ('manglik', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('self_gotra', models.CharField(blank=True, default='', max_length=20)),
                ('mother_gotra', models.CharField(blank=True, default='', max_length=20)),
                ('nani_gotra', models.CharField(blank=True, default='', max_length=20)),
                ('dadi_gotra', models.CharField(blank=True, default='', max_length=20)),
                ('edu', models.TextField(blank=True, default='')),
                ('job_type', models.CharField(blank=True, choices=[('self', 'Self'), ('pvt', 'PVT')], default='', max_length=15)),
                ('job_desc', models.CharField(blank=True, default='', max_length=100)),
                ('publish', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(default='images/0.png', upload_to='images/')),
                ('drink', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('smoking', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=3)),
                ('height_foot', models.IntegerField(blank=True, null=True)),
                ('height_inch', models.IntegerField(blank=True, null=True)),
                ('colour', models.CharField(blank=True, choices=[('Fair', 'Fair'), ('Medium', 'Medium'), ('Dark', 'Dark')], default='', max_length=6)),
                ('physique', models.CharField(blank=True, choices=[('Fat', 'Fat'), ('Average', 'Average'), ('Slim', 'Slim')], default='', max_length=7)),
                ('registered', models.BooleanField(default=False)),
                ('city', models.CharField(blank=True, default='', max_length=20)),
                ('state', models.CharField(blank=True, default='', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='No', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
